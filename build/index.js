!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define("superwstest",[],t):"object"==typeof exports?exports.superwstest=t():e.superwstest=t()}(global,function(){return function(e){var t={};function n(r){if(t[r])return t[r].exports;var o=t[r]={i:r,l:!1,exports:{}};return e[r].call(o.exports,o,o.exports,n),o.l=!0,o.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)n.d(r,o,function(t){return e[t]}.bind(null,o));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=4)}([function(e,t){e.exports=require("blocking-queue")},function(e,t){e.exports=require("supertest")},function(e,t){e.exports=require("fast-deep-equal")},function(e,t){e.exports=require("ws")},function(e,t,n){e.exports=n(5)},function(e,t,n){"use strict";n.r(t);var r=n(1),o=n.n(r),s=n(0),c=n.n(s),i=n(2),u=n.n(i),a=n(3),f=n.n(a);const d=/^http/;function l(e){if("string"!=typeof e)throw new Error(`Expected text message, got ${typeof e}`);return e}function p(e){return JSON.parse(l(e))}function w(e,t){e.send(t,e=>{if(e)throw e})}const h={send:(e,t)=>w(e,t),sendText:(e,t)=>w(e,String(t)),sendJson:(e,t)=>w(e,JSON.stringify(t)),wait:(e,t)=>new Promise(e=>setTimeout(e,t)),exec:(e,t)=>t(e),expectMessage:async(e,t,n=null)=>{const r=await Promise.race([e.messages.pop(),e.closed.then(()=>{throw new Error(`Expected message '${n}', but connection closed`)})]).then(t);if(null!==n)if("function"==typeof n){if(!1===n(r))throw new Error(`Message expectation failed for ${r}`)}else if(!u()(r,n))throw new Error(`Expected message '${n}', got '${r}'`)},expectText:(e,t)=>h.expectMessage(e,l,t),expectJson:(e,t)=>h.expectMessage(e,p,t),close:(e,t,n)=>e.close(t,n),expectClosed:async(e,t=null,n=null)=>{const{code:r,message:o}=await e.closed;if(null!==t&&r!==t)throw new Error(`Expected close code ${t}, got ${r}`);if(null!==n&&o!==n)throw new Error(`Expected close message '${n}', got '${o}'`)}};function g(e,t,n){let r=new Promise((r,o)=>{const s=new f.a(e,t,n);s.messages=new c.a;const i=new c.a,u=new c.a;s.closed=u.pop(),s.firstError=i.pop().then(e=>{throw e}),s.on("message",e=>s.messages.push(e)),s.on("error",o),s.on("close",(e,t)=>u.push({code:e,message:t})),s.on("open",()=>{s.removeListener("error",o),s.on("error",e=>i.push(e)),r(s)})});const o={};function s(e){return Object.assign(e,o)}return Object.keys(h).forEach(e=>{o[e]=(e=>(...t)=>(delete(r=r.then(n=>Promise.race([e(n,...t),n.firstError]).then(()=>n))).expectConnectionError,s(r)))(h[e])}),r.expectConnectionError=(e=null)=>(delete(r=r.catch(e=>({error:e})).then(t=>(function(e,t){if(!e||!e.error)throw new Error("Expected connection failure, but succeeded");if(!t)return;let n=t;"number"==typeof t&&(n=`Unexpected server response: ${t}`);const r=e.error.message;if(r!==n)throw new Error(`Expected connection failure with message '${n}', got '${r}'`)})(t,e))).expectConnectionError,r),s(r)}const x=new WeakSet;function m(e,t){if(x.has(e))return void(e.testConfig.shutdownDelay=Math.max(e.testConfig.shutdownDelay,t));x.add(e);const n={shutdownDelay:t};e.testConfig=n;const r=new Set;e.on("connection",e=>{r.add(e),e.on("close",()=>r.delete(e))});const o=e.close.bind(e);e.close=t=>{e.address()?(!function(e,t){if(t<=0)return void[...e].forEach(e=>e.end());const n=Date.now()+t;[...e].forEach(async t=>{for(;Date.now()<n&&e.has(t);)await new Promise(e=>setTimeout(e,20));e.has(t)&&t.end()})}(r,n.shutdownDelay),n.shutdownDelay=0,o(t)):t&&t()}}var y=(e,{shutdownDelay:t=0}={})=>{if(!e.address())throw new Error("Server must be listening: beforeEach((done) => server.listen(0, done));");m(e,t);const n=o()(e);return n.ws=(t,...n)=>g(function(e,t){if(!e.address())throw new Error("Server was closed");return r.Test.prototype.serverAddress(e,t).replace(d,"ws")}(e,t),...n),n};n.d(t,"default",function(){return y})}])});
//# sourceMappingURL=index.js.map